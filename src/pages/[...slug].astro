---
import { getCollection, render } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import PostDate from "../components/post/PostDate.astro";
import TagChip from "../components/post/TagChip.astro";
import ReadTime from "../components/post/ReadTime.astro";
import RelatedPosts from "../components/post/RelatedPosts.astro";

export async function getStaticPaths() {
  
  const posts = await getCollection("blog");

  return posts.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const { title, description, date, tags } = post.data;
const { Content } = await render(post);

// Calculate reading time
const wordsPerMinute = 200;
const wordCount = post.body?.split(/\s+/).length || 0;
const readingTime = Math.ceil(wordCount / wordsPerMinute);

// Format dates for structured data
const publishedTime = new Date(date).toISOString();
const modifiedTime = new Date(date).toISOString();
---

<BaseLayout title={title} description={description}>
  <!-- Pass enhanced SEO data to Head component via BaseLayout -->
  <Fragment slot="head">
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Article",
      "headline": title,
      "description": description,
      "image": `${Astro.site?.href}og-image.png`,
      "author": {
        "@type": "Organization",
        "name": "CSVBox Team"
      },
      "publisher": {
        "@type": "Organization",
        "name": "CSVBox",
        "logo": {
          "@type": "ImageObject",
          "url": `${Astro.site?.href}logo.png`
        }
      },
      "datePublished": publishedTime,
      "dateModified": modifiedTime,
      "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": Astro.url.href
      },
      "keywords": tags.join(", "),
      "timeRequired": `PT${readingTime}M`
    })} />
  </Fragment>
  <article>
    <h1 class="mb-9 text-3xl md:text-5xl text-left">{title}</h1>
    <div class="mb-9 flex flex-col md:flex-row md:justify-start items-center">
      <div
        class="mr-0 md:mr-6 pr-0 md:pr-6 mb-9 md:mb-0 shrink-0 md:border-r border-gray-300 text-center md:text-left"
      >
       
        <div class="text-gray-700">
          <ReadTime content={post.body!} />
        </div>
      </div>
      <div class="text-lg text-gray-700 text-center md:text-left">{description}</div>
    </div>

    <hr class="mb-9 border-gray-300 w-1/5 mx-auto" />

    <div class="mb-9 min-w-full prose prose-lg prose-gray">
      <Content />
    </div>
    <div class="mb-9">
      {tags.map((tag: string) => <TagChip tag={tag} href="#" />)}
    </div>
    
    <!-- Related Posts Section -->
    <RelatedPosts currentPostId={post.id} currentTags={tags} limit={3} />
    
    <!-- Footer Navigation -->
    <footer class="mt-12 pt-8 border-t border-gray-300">
      <div class="text-center">
        <a
          href="/posts"
          class="inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 hover:text-primary-600 transition-colors duration-200"
          aria-label="View all blog posts"
        >
          ‚Üê Back to All Posts
        </a>
      </div>
    </footer>
  </article>
</BaseLayout>
